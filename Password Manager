DESCRIPTION
Environment Specifications & Instructions
Allowed Languages
Python2
Python3
Build Expectation
Problem Statement
Sakra is developing a new version of password manager. Earlier, she was using some 3rd party password manager but once she figures out that we can't keep a track of all passwords which has been setted for the respective account. She decided to develop his own version of password manager and for that she comes up with the following design:

class **Password_manager**
	members
		**old_passwords**: is a list that holds all of the user’s past passwords i.e. string. 
                           The last item of the list is the user’s current password. 
	methods
		**get_password** method that returns the current password.
		**set_password** method that sets the user’s password. This method should only change the password if the 
			attempted password is different from all the user’s past passwords.  
		**is_correct** method that receives a string and returns a boolean True or False depending on whether the
			string is equal to the current password or not.
      
 code--
 
import random

class Password_manager:
    old_password=['aa','bb','cc','dd']

    def get_password(self):
        return p.old_password[-1]
    def is_correct(self,enter_password):
        if(enter_password==p.old_password[-1]):
            return True
        else:
            return False
    def set_password(self,enter_password):
        if enter_password in p.old_password:
            return True
        else:
            p.old_password.append(enter_password)

p=Password_manager()
ans= p.get_password()
ans1=p.is_correct('dd')

if ans1==False:
    p.set_password('dd')
